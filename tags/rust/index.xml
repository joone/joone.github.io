<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Joone Blog</title>
    <link>https://joone.github.io/tags/rust/</link>
    <description>Recent content in Rust on Joone Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Joone Hur</copyright>
    <lastBuildDate>Sun, 05 Dec 2021 17:20:49 -0800</lastBuildDate><atom:link href="https://joone.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rust-animation project</title>
      <link>https://joone.github.io/posts/rust-animation/</link>
      <pubDate>Sun, 05 Dec 2021 17:20:49 -0800</pubDate>
      
      <guid>https://joone.github.io/posts/rust-animation/</guid>
      <description>I had used the GNOME Clutter project in the past while working on Accelerated Compositing in the WebKit clutter port. During that time, I extended the existing Clutter Actor APIs and implemented my own Actor to support CSS 3D transforms, which worked well. I even managed to run some impressive CSS 3D animation demos in the WebKit Clutter port.
However, the Clutter project has lost its direction and is now almost deprecated, even though it is still used in GNOME Shell.</description>
    </item>
    
    <item>
      <title>Rust 기반 OpenGL animation toolkit</title>
      <link>https://joone.github.io/posts/rust-animation-ko/</link>
      <pubDate>Wed, 24 Nov 2021 18:19:25 +0600</pubDate>
      
      <guid>https://joone.github.io/posts/rust-animation-ko/</guid>
      <description>오랜 숙원사업(?) 첫삽을 떴습니다. 나만의 오픈소스 프로젝트를 시작해보려고 그동안 여러 시도를 해왔지만, 생각 만큼 진척이 없었습니다. 무엇보다도 부끄럽지 않은 결과를 만들어보고 공개하자는 맘이 앞서다 보니, 뭘 만들어도 막상 공개하려면 부끄러움이 앞서더군요. 하지만 어떤 피드백 없이 혼자 꾸역 꾸역 뭔가 만들어 나가는 것도 보통 의지가 없으면 안됩니다. 리누스 토발즈가 말했는이, 제대로된 구조 보다 일단 동작 가능하게 만들어야 한다. 그리고 자주 업데이트하고 릴리스 하면 된다는 말을 떠올리면 일단 최소한 동작 가능한 수준에서 공개를 했습니다.</description>
    </item>
    
    <item>
      <title>Rust &amp; DRM</title>
      <link>https://joone.github.io/posts/rust-drm/</link>
      <pubDate>Thu, 24 May 2018 16:06:00 -0700</pubDate>
      
      <guid>https://joone.github.io/posts/rust-drm/</guid>
      <description>I was surprised that there are many low-level graphics projects written in Rust and I started looking into one of them: drm-rs. Then, I added an example for handling page-flip event.
drm-rs is a subproject of Smithay that is a wayland compositor written in Rust. It allows Rust applications to access the Direct Rendering Manger(DRM), a subsystem of the Linux Kernel. So, we could directly paint something into a frame buffer and render it on the display using DRM APIs.</description>
    </item>
    
  </channel>
</rss>
